org: jefalive
app: sls-guru-code-challenge-api
service: aws-node-http-api-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

plugins:
  - serverless-offline
  - serverless-dynamodb

custom:
  serverless-dynamodb:
    stages:
      - local
    start:
      port: 8000
      docker: false
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

functions:
  save:
    handler: dist/useCases/Todos/CreateTodo/handler.handler
    events:
      - httpApi:
          path: /todos
          method: post

  find:
    handler: dist/useCases/Todos/FindTodo/handler.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: get

  list:
    handler: dist/useCases/Todos/ListTodo/handler.handler
    events:
      - httpApi:
          path: /todos
          method: get

  edit:
    handler: dist/useCases/Todos/EditTodo/handler.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: put

  delete:
    handler: dist/useCases/Todos/DeleteTodo/handler.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: delete

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}